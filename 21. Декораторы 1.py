# 21. Декораторы 1
# В первом задании курса предлагается решить классическую задачу с собеседований по питону - написать декоратор,
# который вычисляет время выполнения оборачиваемой функции. Итак, требования к декоратору:
#
# декоратор должен называться time_decorator
# он должен вычислять время в секундах, в течение которого выполняется обернутая функция при ее вызове.
# Количество секунд должно быть выведено сразу после выполнения оборачиваемой функции.
# Количество секунд следует округлять до целого числа и выводить целое число
# после оборачивания функция должна возвращать тот же результат, который возвращала исходная функция
# пробрасывать аргументы из декоратора в функцию необязательно для выполнения этого задания

import datetime
import time
def time_decorator(func):
    def wrapper(*args,**kwargs):
        startTime = datetime.datetime.now()
        result = func(*args, **kwargs)
        print(int((datetime.datetime.now() - startTime).total_seconds()))
        return result
    return wrapper